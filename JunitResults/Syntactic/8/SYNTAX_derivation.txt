[SYNTAX] prog 
[SYNTAX] classDecl_List funcDef_List 'program' funcBody ';' 
[SYNTAX]  funcDef_List 'program' funcBody ';' 
[SYNTAX]   'program' funcBody ';' 
[SYNTAX]   'program' { varDecl_statement_List } ';' 
[SYNTAX]   'program' { remainingStatement statement_List } ';' 
[SYNTAX]   'program' { for ( type id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( numericType id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1 assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1 assignOp arithExpr exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1 assignOp term arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1 assignOp factor term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1 assignOp intNum term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1 assignOp 1 term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1 assignOp 1  arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1 assignOp 1   exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1 assignOp 1    ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1 assignOp 1    ; arithExpr relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1 assignOp 1    ; term arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1 assignOp 1    ; factor term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1 assignOp 1    ; functionCall term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1 assignOp 1    ; , variable term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1 assignOp 1    ; , id variable_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1 assignOp 1    ; , id variable_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1 assignOp 1    ; , id indice_List idnest_List_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1 assignOp 1    ; , id  idnest_List_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1 assignOp 1    ; , id   term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1 assignOp 1    ; , id    arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1 assignOp 1    ; , id     relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1 assignOp 1    ; , id     <= arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1 assignOp 1    ; , id     <= term arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1 assignOp 1    ; , id     <= factor term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1 assignOp 1    ; , id     <= intNum term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1 assignOp 1    ; , id     <= 99 term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1 assignOp 1    ; , id     <= 99  arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1 assignOp 1    ; , id     <= 99   ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1 assignOp 1    ; , id     <= 99   ; variable assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1 assignOp 1    ; , id     <= 99   ; id variable_Tail assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1 assignOp 1    ; , id     <= 99   ; id variable_Tail assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1 assignOp 1    ; , id     <= 99   ; id indice_List idnest_List_Tail assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1 assignOp 1    ; , id     <= 99   ; id  idnest_List_Tail assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp arithExpr exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp factor term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( arithExpr ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( term arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( factor term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( functionCall term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , variable term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id variable_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id variable_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id indice_List idnest_List_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id  idnest_List_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id   term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id    arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  addOp term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + factor term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + intNum term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1 term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1  arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1   exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; statement statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; remainingStatement statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( type id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( numericType id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp arithExpr exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp term arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp factor term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp intNum term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1 term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1  arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1   exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; arithExpr relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; term arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; factor term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; functionCall term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , variable term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id variable_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id variable_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id indice_List idnest_List_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id  idnest_List_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id   term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id    arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= term arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= factor term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= intNum term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99 term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99  arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; variable assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id variable_Tail assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id variable_Tail assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id indice_List idnest_List_Tail assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id  idnest_List_Tail assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp arithExpr exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp factor term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( arithExpr ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( term arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( factor term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( functionCall term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , variable term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id variable_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id variable_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id indice_List idnest_List_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id  idnest_List_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id   term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id    arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  addOp term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + factor term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + intNum term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1 term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1  arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1   exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; statement statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; remainingStatement statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( type id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( numericType id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp arithExpr exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp term arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp factor term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp intNum term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1 term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1  arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1   exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; arithExpr relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; term arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; factor term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; functionCall term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , variable term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id variable_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id variable_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id indice_List idnest_List_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id  idnest_List_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id   term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id    arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= term arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= factor term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= intNum term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99 term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99  arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; variable assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id variable_Tail assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id variable_Tail assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id indice_List idnest_List_Tail assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id  idnest_List_Tail assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp arithExpr exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp factor term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( arithExpr ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( term arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( factor term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( functionCall term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , variable term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id variable_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id variable_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id indice_List idnest_List_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id  idnest_List_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id   term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id    arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  addOp term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + factor term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + intNum term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1 term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1  arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1   exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { statement statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { assignStatSemicolon statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { variable assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int idxx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id variable_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id variable_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id indice indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ arithExpr ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ term arithExpr_Tail ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ factor term_Tail arithExpr_Tail ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ intNum term_Tail arithExpr_Tail ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1 term_Tail arithExpr_Tail ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1  arithExpr_Tail ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]  idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp arithExpr exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp term arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp factor term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp functionCall term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , variable term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id variable_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id variable_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id indice indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ arithExpr ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ term arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ factor term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ intNum term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1 term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1  arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]  idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]   term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]    arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]     exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; statement statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; remainingStatement statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( expr ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( arithExpr exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( term arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( factor term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( functionCall term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , variable term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id variable_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id variable_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id indice indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ arithExpr ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ term arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ factor term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ functionCall term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , variable term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id variable_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , idx     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id variable_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , idx     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id indice_List idnest_List_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , idx     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id  idnest_List_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , idx     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id   term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , idx     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id    arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , idx     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , idx     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]  idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , idx     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]   term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , idx     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]    arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , idx     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , idx     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     relOp arithExpr ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , idx     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < arithExpr ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , idx     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < term arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , idx     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < factor term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , idx     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < functionCall term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , idx     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , variable term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , idx     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id variable_Tail term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id variable_Tail term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id indice_List idnest_List_Tail term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id  idnest_List_Tail term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id   term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id    arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { statement statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { assignStatSemicolon statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { variable assignOp expr ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id variable_Tail assignOp expr ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id variable_Tail assignOp expr ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id indice_List idnest_List_Tail assignOp expr ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id  idnest_List_Tail assignOp expr ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp expr ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp arithExpr exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp term arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp factor term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp functionCall term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , variable term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id variable_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id variable_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id indice indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ arithExpr ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ term arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ factor term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ functionCall term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , variable term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id variable_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id variable_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id indice_List idnest_List_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id  idnest_List_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id   term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id    arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]  idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]   term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]    arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]     exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; statement statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; remainingStatement statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( expr ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( arithExpr exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( term arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( factor term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( functionCall term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , variable term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id variable_Tail term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id variable_Tail term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id  idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id   term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id    arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id     exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; statement statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; remainingStatement statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( type id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( numericType id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp arithExpr exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp term arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp factor term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp intNum term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1 term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1  arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1   exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; arithExpr relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; term arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; factor term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; functionCall term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , variable term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id variable_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id variable_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id indice_List idnest_List_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id  idnest_List_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id   term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id    arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= term arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= factor term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= intNum term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99 term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99  arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; variable assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id variable_Tail assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id variable_Tail assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id indice_List idnest_List_Tail assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id  idnest_List_Tail assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp arithExpr exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp factor term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( arithExpr ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( term arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( factor term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( functionCall term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , variable term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id variable_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id variable_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id indice_List idnest_List_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id  idnest_List_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id   term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id    arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  addOp term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + factor term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + intNum term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1 term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1  arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1   exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { statement statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { remainingStatement statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( type id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( numericType id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp arithExpr exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp term arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp factor term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp intNum term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1 term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1  arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1   exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; arithExpr relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; term arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; factor term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; functionCall term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , variable term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id variable_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id variable_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id indice_List idnest_List_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id  idnest_List_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id   term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id    arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= term arithExpr_Tail ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= factor term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= intNum term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99 term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99  arithExpr_Tail ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; variable assignOp expr ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id variable_Tail assignOp expr ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id variable_Tail assignOp expr ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id indice_List idnest_List_Tail assignOp expr ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id  idnest_List_Tail assignOp expr ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp expr ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp arithExpr exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp factor term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( arithExpr ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( term arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( factor term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( functionCall term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , variable term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id variable_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id variable_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id indice_List idnest_List_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id  idnest_List_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id   term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id    arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  addOp term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + factor term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + intNum term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1 term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1  arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1   exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; statement statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; remainingStatement statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( type id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( numericType id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp arithExpr exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp term arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp factor term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp intNum term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1 term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1  arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1   exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; arithExpr relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; term arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; factor term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; functionCall term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , variable term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id variable_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id variable_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id indice_List idnest_List_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id  idnest_List_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id   term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id    arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= term arithExpr_Tail ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= factor term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= intNum term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99 term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99  arithExpr_Tail ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; variable assignOp expr ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id variable_Tail assignOp expr ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id variable_Tail assignOp expr ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id indice_List idnest_List_Tail assignOp expr ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id  idnest_List_Tail assignOp expr ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp expr ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp arithExpr exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp factor term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( arithExpr ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( term arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( factor term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( functionCall term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , variable term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id variable_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id variable_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id indice_List idnest_List_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id  idnest_List_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id   term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id    arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  addOp term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + factor term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + intNum term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1 term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1  arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1   exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; statement statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; remainingStatement statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( type id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( numericType id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp arithExpr exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp term arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp factor term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp intNum term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1 term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1  arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1   exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; arithExpr relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; term arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; factor term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; functionCall term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , variable term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id variable_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id variable_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id indice_List idnest_List_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id  idnest_List_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id   term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id    arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= term arithExpr_Tail ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= factor term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= intNum term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99 term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99  arithExpr_Tail ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; assignStat ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; variable assignOp expr ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id variable_Tail assignOp expr ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id variable_Tail assignOp expr ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id indice_List idnest_List_Tail assignOp expr ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id  idnest_List_Tail assignOp expr ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp expr ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp arithExpr exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp factor term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( arithExpr ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( term arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( factor term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( functionCall term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , variable term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id variable_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id variable_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id indice_List idnest_List_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id  idnest_List_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id   term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id    arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  addOp term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + factor term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + intNum term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1 term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1  arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1   exp_Tail ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    ) statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; statement statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; remainingStatement statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( type id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( numericType id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp arithExpr exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp term arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp factor term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp intNum term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1 term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1  arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1   exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; relExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; arithExpr relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; term arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; factor term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; functionCall term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , variable term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id variable_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id variable_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id indice_List idnest_List_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id  idnest_List_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id   term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id    arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     relOp arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= arithExpr ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= term arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= factor term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= intNum term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99 term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99  arithExpr_Tail ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; assignStat ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; variable assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id variable_Tail assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id variable_Tail assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id indice_List idnest_List_Tail assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id  idnest_List_Tail assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp expr ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp arithExpr exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp factor term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( arithExpr ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( term arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( factor term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( functionCall term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , variable term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id variable_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id variable_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id indice_List idnest_List_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id  idnest_List_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id   term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id    arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  addOp term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + factor term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + intNum term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1 term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1  arithExpr_Tail exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1   exp_Tail ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    ) statBlock ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { statement statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { assignStatSemicolon statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { variable assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , idxx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id variable_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id variable_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id indice indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ arithExpr ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ term arithExpr_Tail ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ factor term_Tail arithExpr_Tail ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ intNum term_Tail arithExpr_Tail ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1 term_Tail arithExpr_Tail ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1  arithExpr_Tail ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]  idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp expr ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp arithExpr exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp term arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp factor term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp functionCall term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , variable term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id variable_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id variable_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id indice indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ arithExpr ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ term arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ factor term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ intNum term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1 term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1  arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]  idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]   term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]    arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]     exp_Tail ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; statement statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; remainingStatement statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( expr ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( arithExpr exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( term arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( factor term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( functionCall term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , variable term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id variable_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id variable_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id indice indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ arithExpr ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ term arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ factor term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ functionCall term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , variable term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id variable_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id variable_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id indice_List idnest_List_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id  idnest_List_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id   term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id    arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]  idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]   term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]    arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     relOp arithExpr ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < arithExpr ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < term arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < factor term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < functionCall term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , variable term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; idx   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id variable_Tail term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id variable_Tail term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id indice_List idnest_List_Tail term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id  idnest_List_Tail term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id   term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id    arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then statBlock else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { statement statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { assignStatSemicolon statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { variable assignOp expr ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id variable_Tail assignOp expr ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id variable_Tail assignOp expr ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id indice_List idnest_List_Tail assignOp expr ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id  idnest_List_Tail assignOp expr ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp expr ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp arithExpr exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp term arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp factor term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp functionCall term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , variable term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id variable_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id variable_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id indice indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ arithExpr ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ term arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ factor term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ functionCall term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , variable term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id variable_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id variable_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id indice_List idnest_List_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id  idnest_List_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id   term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id    arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]  idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]   term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]    arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]     exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ; statement_List } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else statBlock ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { statement statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { remainingStatement statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( type id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( numericType id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp expr ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp arithExpr exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp term arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp factor term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp intNum term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1 term_Tail arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1  arithExpr_Tail exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1   exp_Tail ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; relExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; arithExpr relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; term arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; factor term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; functionCall term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , variable term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id variable_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id variable_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id indice_List idnest_List_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id  idnest_List_Tail term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id   term_Tail arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id    arithExpr_Tail relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     relOp arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= arithExpr ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= term arithExpr_Tail ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= factor term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= intNum term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99 term_Tail arithExpr_Tail ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99  arithExpr_Tail ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; assignStat ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; variable assignOp expr ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id variable_Tail assignOp expr ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id variable_Tail assignOp expr ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id indice_List idnest_List_Tail assignOp expr ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id  idnest_List_Tail assignOp expr ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp expr ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp arithExpr exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp factor term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( arithExpr ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( term arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( factor term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( functionCall term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , variable term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id variable_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idxx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id variable_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idxx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id indice_List idnest_List_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idxx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id  idnest_List_Tail term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idxx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id   term_Tail arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idxx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id    arithExpr_Tail ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idxx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     ) term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idxx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idxx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  addOp term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idxx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + term arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idxx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + factor term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idxx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + intNum term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idxx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1 term_Tail arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idxx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1  arithExpr_Tail exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idxx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1   exp_Tail ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idxx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    ) statBlock ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idxx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idxx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { statement statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idxx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { assignStatSemicolon statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idxx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { variable assignOp expr ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , idxx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id variable_Tail assignOp expr ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id variable_Tail assignOp expr ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id indice indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ arithExpr ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ term arithExpr_Tail ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ factor term_Tail arithExpr_Tail ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ intNum term_Tail arithExpr_Tail ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1 term_Tail arithExpr_Tail ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1  arithExpr_Tail ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ] indice_List idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]  idnest_List_Tail assignOp expr ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp expr ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp arithExpr exp_Tail ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp term arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp factor term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp functionCall term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , variable term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id variable_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id variable_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id indice indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ arithExpr ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ term arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ factor term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ intNum term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1 term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1  arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]  idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]   term_Tail arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]    arithExpr_Tail exp_Tail ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]     exp_Tail ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; statement statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; remainingStatement statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( expr ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( arithExpr exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( term arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( factor term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( functionCall term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , variable term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id variable_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id variable_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id indice indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ arithExpr ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ term arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ factor term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ functionCall term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , variable term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id variable_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , idx     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id variable_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , idx     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id indice_List idnest_List_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , idx     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id  idnest_List_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , idx     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id   term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , idx     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id    arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , idx     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , idx     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]  idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , idx     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]   term_Tail arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , idx     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]    arithExpr_Tail exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , idx     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     exp_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , idx     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     relOp arithExpr ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , idx     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < arithExpr ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , idx     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < term arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , idx     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < factor term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , idx     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < functionCall term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , idx     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , variable term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , idx     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id variable_Tail term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id variable_Tail term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id indice_List idnest_List_Tail term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id  idnest_List_Tail term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id   term_Tail arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id    arithExpr_Tail ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then statBlock else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { statement statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { assignStatSemicolon statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { variable assignOp expr ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id variable_Tail assignOp expr ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id variable_Tail assignOp expr ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id indice_List idnest_List_Tail assignOp expr ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id  idnest_List_Tail assignOp expr ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp expr ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp arithExpr exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp term arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp factor term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp functionCall term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , variable term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id variable_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id variable_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id indice indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ arithExpr ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ term arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ factor term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ functionCall term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , variable term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id variable_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id variable_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id indice_List idnest_List_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id  idnest_List_Tail term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id   term_Tail arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id    arithExpr_Tail ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ] indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]  idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]   term_Tail arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]    arithExpr_Tail exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]     exp_Tail ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ; statement_List } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else statBlock ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { statement_List } ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; statement statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; remainingStatement statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( expr ) ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( arithExpr exp_Tail ) ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( term arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( factor term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( functionCall term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , variable term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , idx     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id variable_Tail term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id variable_Tail term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id  idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id   term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id    arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id     exp_Tail ) ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ; statement_List } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ; statement_List } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ;  } ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ;  } ; statement statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ;  } ; remainingStatement statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ;  } ; return ( expr ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ;  } ; return ( arithExpr exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ;  } ; return ( term arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ;  } ; return ( factor term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ;  } ; return ( functionCall term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ;  } ; return ( , variable term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , id      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ;  } ; return ( , id variable_Tail term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , minValue      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ;  } ; return ( , id variable_Tail term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , minValue      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ;  } ; return ( , id indice_List idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , minValue      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ;  } ; return ( , id  idnest_List_Tail term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , minValue      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ;  } ; return ( , id   term_Tail arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , minValue      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ;  } ; return ( , id    arithExpr_Tail exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , minValue      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ;  } ; return ( , id     exp_Tail ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , minValue      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ;  } ; return ( , id      ) ; statement_List } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , minValue      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ;  } ; return ( , id      ) ;  } ; statement_List } ';' 
[SYNTAX]   'program' { for ( int axx3x2x1xx3x2x1xx3x2x1 assignOp 1    ; , b     <= 99   ; array   assignOp ( , maxValuex     )  + 1    )  ; for ( int maxValue assignOp 1    ; , array     <= 99   ; minValuex   assignOp ( , axx3x2x1xx3x2x1xx3x2x1xx3x2x1xx3x2x1     )  + 1    )  {  } ; for ( int b assignOp 1    ; , array     <= 99   ; maxValuex   assignOp ( , maxValue     )  + 1    )  { array [ 1   ]   assignOp , axx3x2x1x [ 1   ]      ; if ( , b [ , array     ]     < , maxValuex     ) then  { maxValue   assignOp , array [ , minValuex     ]      ;  } else  {  } ; return ( , minValue      ) ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  {  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  ;  } ; for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  { for ( int id assignOp 1    ; , id     <= 99   ; id   assignOp ( , id     )  + 1    )  { id [ 1   ]   assignOp , id [ 1   ]      ; if ( , id [ , id     ]     < , id     ) then  { id   assignOp , id [ , id     ]      ;  } else  {  } ; return ( , id      ) ;  } ;  } ; return ( , id      ) ;  } ;  } ';' 
