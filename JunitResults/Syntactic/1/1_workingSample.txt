class InheritedUtility {
int member1;
};

class Utility : InheritedUtility {
int varq1[10];
int varq2;
int func1(int sar);
int func2(int var, int var2[10]);
int var1[4][5][7][8][9][1][0];
float var2;
int findMax(int array[100]);
int findMin(int array[100]);
};

class InheritedUtility2:CV, Utility{
int member1;
int member2;
int func1(int sar);
int func2(int var, int var2[10]);
int var1[4][5][7][8][9][1][0];
float var2;
int findMax(int array[100]);
int findMin(int array[100]);
};

int Utility::findMax(int array[100]){
	for( int idx = 99; idx > 0; idx = idx - 1 ){
		if(array[idx] > maxValue) then {
			maxValue = array[idx];
		}
		else{};
	};
	return (maxValue);
};

program {
int sample[4][5];
int idx;
};
